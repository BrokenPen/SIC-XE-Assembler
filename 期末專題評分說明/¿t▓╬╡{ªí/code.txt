Line 	Loc 	Source statement 		Object code 

5 	1000 	COPY 	START	 1000 		
10 	1000 	FIRST 	STL	 RETADR 	141033 
15 	1003 	CLOOP 	JSUB	 RDREC 		482039 
20 	1006 		LDA 	 LENGTH 	001036 
25 	1009 		COMP	 ZERO 		281030 
30 	100C 		JEQ 	 ENDFIL 	301015 
35 	100F 		JSUB	 WRREC 		482061 
40 	1012 		J 	 CLOOP 		3C1003 
45 	1015 	ENDFIL 	LDA 	 EOF 		00102A 
50 	1018 		STA 	 BUFFER 	0C1039 
55 	101B 		LDA 	 THREE 		00102D 
60 	101E 		STA	 LENGTH 	0C1036 
65 	1021 		JSUB 	 WRREC 		482061 
70 	1024 		LDL 	 RETADR		081033 
75 	1027 		RSUB 			4C0000 
80 	102A 	EOF 	BYTE 	 C'EOF' 	454F46 
85 	102D 	THREE 	WORD 	 3 		000003 
90 	1030 	ZERO 	WORD 	 0 		000000 
95 	1033 	RETADR 	RESW 	 1 		
100 	1036 	LENGTH 	RESW 	 1 		
105 	1039 	BUFFER 	RESB 	 4096 		
110 		.			
115 		.	SUBROUTINE TO READ RECORD INTO BUFFER 
120 		.			
125 	2039 	RDREC 	LDX 	 ZERO 		041030 
130 	203C 		LDA 	 ZERO 		001030 
135 	203F 	RLOOP 	TD  	 INPUT 		E0205D 
140 	2042 		JEQ 	 RLOOP 		30203F 
145 	2045 		RD 	 INPUT 		D8205D 
150 	2048 		COMP 	 ZERO 		281030 
155 	204B 		JEQ  	 EXIT 		302057 
160 	204E 		STCH 	 BUFFER,X       549039 
165 	2051 		TIX 	 MAXLEN 	2C205E 
170 	2054 		JLT 	 RLOOP 		38203F 
175 	2057 	EXIT 	STX 	 LENGTH 	101036 
180 	205A 		RSUB 			4C0000 
185 	205D 	INPUT 	BYTE	 X'F1'		F1 
190 	205E 	MAXLEN 	WORD 	 4096 		001000 
195 		.	
200 		.	SUBROUTINE TO WRITE RECORD FROM BUFFER 
205 		.	
210 	2061 	WRREC 	LDX 	 ZERO 		041030 
215 	2064 	WLOOP 	TD 	 OUTPUT 	E02079 
220 	2067 		JEQ 	 WLOOP 		302064 
225 	206A 		LDCH 	 BUFFER,X 	509039 
230 	206D 		WD 	 OUTPUT 	DC2079 
235 	2070 		TIX 	 LENGTH 	2C1036 
240 	2073 		JLT 	 WLOOP 		382064 
245 	2076 		RSUB 			4C0000 
250 	2079 	OUTPUT 	BYTE 	 X'05' 		05 
255 			END 	 FIRST 	
	 				
		Figure 2.2 Program from Fig. 2.1 with object code. 

---------------------------------------------------------------------------------------------------------------

Pass 1:

begin
	read first input line
	if OPCODE = 'START' then
		begin
			save #[OPERAND] as starting address
			initialize LOCCTR to starting address
			write line to intermediate file
			read next input line
		end {if START}
	else
		initialize LOCCTR to 0
	while OPCODE ?? 'END' do
		begin
			if this is not a comment line then
				begin
					if there is a symbol in the LABEL field then
						begin
							search SYMTAB for LABEL
							if found then
								set error flag (duplicate symbol)
							else
								insert (LABEL, LOCCTR) into SYMTAB
						end {if symbol}
					search OPTAB for OPCODE
					if found then
						add 3 {instruction length} to LOCCTR
					else if OPCODE = 'WORD ' then
						add 3 to LOCCTR
					else if OPCODE = 'RESW' then
						add 3 * #[OPERAND] to LOCCTR
					else if OPCODE = 'RESB' then
						add #[OPERAND] to LOCCTR
					else if OPCODE = 'BYTE' then
						begin
							find length of constant in bytes
							add length to LOCCTR
						end {if BYTE}
					else
						set error flag (invalid operation code)
				end {if not a comment}
			write line to intermediate file
			read next input line
		end {while not END}
	write last line to intermediate file
	save (LOCCTR - starting address) as program length
end {Pass 1} 


			Figure 2.4(a) Algorithm for Pass 1 of assembler.



--------------------------------------------------------------------------------------------------------------------



Pass 2:
begin
	read first input line {from intermediate file}
	if OPCODE = 'START' then
		begin
			Write listing line
			read next input line
		end {if START}
	write Header record to object program
	initialize first Text record
	while OPCODE ?? 'END' do
		begin
			if this is not a comment line then
				begin
					search OPTAB for OPCODE
					if found then
						begin
							if there is a symbol in OPERAND field then
								begin
									search SYMTAB for OPERAND
									if found then
										store symbol value as operand address
									else
										begin
											store 0 as operand address
											set error flag (undefined symbol)
										end
								end {if symbol}
							else
								store 0 as operand address
							assemble the object code instruction
						end {if opcode found}
					else if OPCODE = 'BYTE' or 'WORD' then
						convert constant to object code
					if object code will not fit into the current Text record then
						begin
							write Text record to object program
							initialize new Text record
						end
					add object code to Text record
				end {if not comment }
			write listing line
			read next input line
		end {while not END}
	write last Text record to object program
	write End record to object program
	write last listing line
end {Pass 2}


		Figure 2.4(b) Algorithm for Pass 2 of assembler.


----------------------------------------------------------------------------------------------------------------------------



?Line 			Source statement 	 
5 	COPY 	START 	0 		COPY FILE FROM INPUT TO OUTPUT 	 
10 	FIRST 	STL 	RETADR 		SAVE RETURN ADDRESS 	 
12 		LDB    #LENGTH	 	ESTABLISH BASE REGISTER 	 
13 		BASE 	LENGTH 		 
15 	CLOOP  +JSUB 	RDREC 		READ INPUT RECORD 	 
20 		LDA 	LENGTH 		TEST FOR EOF (LENGTH = O) 	 
25 		COMP   #0 		 
30 		JEQ 	ENDFIL 		EXIT IF EOF FOUND 	 
35 	       +JSUB 	WRREC 		WRITE OUTPUT RECORD 	 
40 		J 	CLOOP 		LOOP 	 
45 	ENDFIL 	LDA 	EOF 		INSERT END OF FILE MARKER 	 
50 		STA 	BUFFER 		 
55 		LDA    #3 		SET LENGTH = 3 	 
60 		STA 	LENGTH 		 
65 	       +JSUB 	WRREC 		WRITE EOF 	 
70 		J      @RETADR 		RETURN TO CALLER 	 
80 	EOF 	BYTE 	C'EOF' 		 
95 	RETADR 	RESW 	1 		 
100 	LENGTH 	RESW 	1 		LENGTH OF RECORD 	 
105 	BUFFER 	RESB 	4096 		4096-BYTE BUFFER AREA 	 
110 	.			 
115 	.	SUBROUTINE TO READ RECORD INTO BUFFER 	 
120 	.				 
125 	RDREC 	CLEAR 	X 		CLEAR LOOP COUNTER 	 
130 		CLEAR 	A 		CLEAR A TO ZERO 	 
132 		CLEAR 	S 		CLEAR S TO ZERO 	 
133 	       +LDT    #4096 		 
135 	RLOOP 	TD 	INPUT 		TEST INPUT DEVICE 	 
140 		JEQ 	RLOOP 		LOOP UNTIL READY 	 
145 		RD 	INPUT 		READ CHARACTER INTO REGISTER A 	 
150 		COMPR 	A,S 		TEST FOR END OF RECORD (X'00') 	 
155 		JEQ 	EXIT 		EXIT LOOP IF EOR 	 
160 		STCH 	BUFFER,X 	STORE CHARACTER IN BUFFER 	 
165 		TIXR 	T 		LOOP UNLESS MAX LENGTH 	 
170 		JLT 	RLOOP 		  HAS BEEN REACHED 	 
175 	EXIT 	STX 	LENGTH 		SAVE RECORD LENGTH 	 
180 		RSUB 			RETURN TO CALLER 	 
185 	INPUT 	BYTE 	X'F1' 		CODE FOR INPUT DEVICE 	 
195 	.		 
200 	.	SUBROUTINE TO WRITE RECORD FROM BUFFER 	 
205 	.		 
210 	WRREC 	CLEAR 	X 		CLEAR LOOP COUNTER 	 
212 		LDT 	LENGTH 		 
215 	WLOOP 	TD 	OUTPUT 		TEST OUTPUT DEVICE 	 
220 		JEQ 	WLOOP 		LOOP UNTIL READY 	 
225 		LDCH 	BUFFER,X 	GET CHARACTER FROM BUFFER 	 
230 		WD 	OUTPUT 		WRITE CHARACTER 	 
235 		TIXR 	T 		LOOP UNTIL ALL CHARACTERS 	 
240 		JLT 	WLOOP 		  HAVE BEEN WRITTEN 	 
245 		RSUB 			RETURN TO CALLER 	 
250 	OUTPUT 	BYTE 	X'05' 		CODE FOR OUTPUT DEVICE 	 
255 		END 	FIRST 	

	 
		Figure 2.5 	Example of a SIC/XE program. 	


-----------------------------------------------------------------------------------------------------------------------------



Line 	Loc 	   Source statement	 	Object code 	 

5 	0000 	COPY 	START 	0 			 
10 	0000 	FIRST 	STL 	RETADR 		17202D 	 
12 	0003 		LDB    #LENGTH 		69202D 	 
13 			BASE 	LENGTH 			 
15 	0006 	CLOOP  +JSUB 	RDREC 		4B101036 	 
20 	000A 		LDA 	LENGTH 		032026 	 
25 	000D 		COMP   #0 		290000 	 
30 	0010 		JEQ 	ENDFIL 		332007 	 
35 	0013 	       +JSUB 	WRREC 		4B10105D 	 
40 	0017 		J 	CLOOP 		3F2FEC 	 
45 	001A 	ENDFIL 	LDA 	EOF 		032010 	 
50 	001D 		STA 	BUFFER 		0F2016 	 
55 	0020 		LDA    #3 		010003 	 
60 	0023 		STA 	LENGTH 		0F200D 	 
65 	0026 	       +JSUB	WRREC 		4B10105D 	 
70 	002A 		J      @RETADR 		3E2003 	 
80 	002D 	EOF 	BYTE	C'EOF' 		454F46 	 
95 	0030 	RETADR 	RESW 	1 			 
100 	0033 	LENGTH 	RESW	1 			 
105 	0036 	BUFFER 	RESB	4096 			 
110 		.				 
115 		.	SUBROUTINE TO READ RECORD INTO BUFFER 	 
120 		.				 
125 	1036 	RDREC 	CLEAR 	X 		B410 	 
130 	1038 		CLEAR 	A 		B400 	 
132 	103A 		CLEAR 	S 		B440 	 
133 	103C 	       +LDT    #4096		75101000 	 
135 	1040 	RLOOP 	TD 	INPUT 		E32019 	 
140 	1043 		JEQ 	RLOOP 		332FFA 	 
145 	1046 		RD 	INPUT 		DB2013 	 
150 	1049 		COMPR 	A,S 		A004 	 
155 	104B 		JEQ 	EXIT 		332008 	 
160 	104E 		STCH	BUFFER,X 	57C003 	 
165 	1051 		TIXR 	T 		B850 	 
170 	1053 		JLT 	RLOOP 		3B2FEA 	 
175 	1056 	EXIT 	STX 	LENGTH 		134000 	 
180 	1059 		RSUB 			4F0000 	 
185 	105C 	INPUT 	BYTE 	X'F1' 		F1 	 
195 		.		 
200 		.	SUBROUTINE TO WRITE RECORD FROM BUFFER 	 
205 		.		 
210 	105D 	WRREC 	CLEAR 	X 		B410 	 
212 	105F 		LDT 	LENGTH 		774000 	 
215 	1062 	WLOOP 	TD 	OUTPUT 		E32011 	 
220 	1065 		JEQ 	WLOOP 		332FFA 	 
225 	1068 		LDCH 	BUFFER,X 	53C003 	 
230 	106B 		WD 	OUTPUT 		DF2008 	 
235 	106E 		TIXR 	T 		B850 	 
240 	1070 		JLT 	WLOOP 		3B2FEF 	 
245 	1073 		RSUB 			4F0000 	 
250  	1076 	OUTPUT  BYTE  	X'05'  		05 	 
255                     END     FIRST

						 
Figure 2.6 Progarm from Fig. 2.5 with object code. 	 


----------------------------------------------------------------------------------------------------------------------


Line 	Loc 	   Source statement	 	Object code 	 

5 	0000 	COPY 	START 	0 		 
10 	0000 	FIRST 	STL 	RETADR 		17202D 	 
13 	0003 		LDB    #LENGTH 		69202D 	 
14 			BASE 	LENGTH 		 
15 	0006 	CLOOP  +JSUB 	RDREC 		4B101036 	 
20 	OOOA 		LDA 	LENGTH 		032026 	 
25 	OOOD 		COMP   #0 		290000 	 
30 	0010 		JEQ 	ENDFIL 		332007 	 
35 	0013 	       +JSUB 	WRREC 		4B10105D 	 
40 	0017 		J 	CLOOP 		3F2FEC 	 
45 	00lA 	ENDFIL 	LDA    =C'EOF' 		032010 	 
50 	001D 		STA 	BUFFER 		0F2016 	 
55 	0020 		LDA    #3 		010003 	 
60 	0023 		STA 	LENGTH 		0F200D 	 
65 	0026 		+JSUB 	WRREC 		4B10l05D 	 
70 	002A 		J      @RETADR 		3E2003 	 
93 			LTORG 			 
	002D 	*      =C'EOF' 			454F46 	 
95 	0030 	RETADR 	RESW 	1 		 
100 	0033 	LENGTH 	RESW 	1 			 
105 	0036 	BUFFER 	RESB 	4096 			 
106 	1036 	BUFEND 	EQU 	* 			 
107 	1000 	MAXLEN 	EQU 	BUFEND-BUFFER 			 
110 		.				 
115 		.	SUBROUTINE TO READ RECORD INTO BUFFER 	 
120 		.					 
125 	1036 	RDREC 	CLEAR 	X 		B410 	 
130 	1038 		CLEAR 	A 		B400 	 
132 	103A 		CLEAR 	S 		B440 	 
133 	103C 	       +LDT    #MAXLEN 		75101000 	 
135 	1040 	RLOOP 	TD 	INPUT 		E32019 	 
140 	1043 		JEQ 	RLOOP 		332FFA 	 
145 	1046 		RD 	INPUT 		DB2013 	 
150 	1049 		COMPR 	A,S 		A004 	 
155 	104B 		JEQ 	EXIT 		332008 	 
160 	104E 		STCH 	BUFFER,X 	57C003 	 
165 	1051 		TIXR 	T 		B850 	 
170 	1053 		JLT 	RLOOP 		3B2FEA 	 
175 	1056 	EXIT 	STX 	LENGTH 		134000 	 
180 	1059 			RSUB 		4F0000 	 
185 	105C 	INPUT 	BYTE 	X'F1' 		F1 	 
195 		.					 
200 		.		SUBROUTINE TO WRITE RECORD FROM BUFFER 	 
205 		.					 
210 	105D 	WRREC 	CLEAR 	X 		B410 	 
212 	105F 		LDT 	LENGTH 		774000 	 
215 	1062 	WLOOP 	TD     =X'05' 		E32011 	 
220 	106S 		JEQ 	WLOOP 		332FFA 	 
22S 	1068 		LDCH 	BUFFER, X 	53C003 	 
230 	106B 		WD     =X'OS' 		DF2008 	 
235 	106E 		TIXR 	T 		B850 	 
240 	1070 		JLT 	WLOOP 		3B2FEF 	 
245  	1073  	 	RSUB 		 	4F0000
255			END  	FIRST
 	1076	*      =X'O5'			05
	 

Figure 2.10 Program from Fig. 2.9 with object code. 	



----------------------------------------------------------------------------------------------------------------------


Line 	Loc/Block 	Source statement 		Object code 
	 
5 	0000 	0 	COPY 	START 	0 		 
10 	0000 	0 	FIRST 	STL 	RETADR 		172063 	 
15 	0003 	0 	CLOOP 	JSUB 	RDREC 		4B2021 	 
20 	0006 	0 		LDA 	LENGTH 		032060 	 
25 	0009 	0 		COMP   #0 		290000 	 
30 	000C 	0 		JEQ 	ENDFIL 		332006 	 
35 	000F 	0 		JSUB 	WRREC 		4B203B 	 
40 	0012 	0 		J 	CLOOP 		3F2FEE 	 
45 	0015 	0 	ENDFIL 	LDA    =C'EOF' 		032055 	 
50 	0018 	0 		STA 	BUFFER 		0F2056 	 
55 	001B 	0 		LDA    #3 		010003 	 
60 	001E 	0 		STA 	LENGTH 		0F2048 	 
65 	0021 	0 		JSUB 	WRREC 		4B2029 	 
70 	0024 	0 		J      @RETADR 		3E203F 	 
92 	0000 	1 		USE 	CDATA 		 
95 	0000 	1 	RETADR 	RESW 	1 		 
100 	0003 	1 	LENGTH 	RESW 	1 		 
103 	0000 	2 		USE 	CBLKS 		 
105 	0000 	2 	BUFFER 	RESB 	4096 		 
106 	1000 	2 	BUFEND 	EQU 	* 		 
107 	1000 		MAXLEN 	EQU 	BUFEND-BUFFER 		 
110 			.			 
115 			.	SUBROUTINE TO READ RECORD INTO BUFFER 	 
120 			.			 
123 	0027 	0 		USE 		 
125 	0027 	0 	RDREC 	CLEAR 	X 		B410 	 
130 	0029 	0 		CLEAR 	A 		B400 	 
132 	002B 	0 		CLEAR 	S 		B440 	 
133 	002D 	0 	       +LDT    #MAXLEN 		75101000 	 
135 	0031 	0 	RLOOP 	TD	INPUT 		E32038 	 
140 	0034 	0 		JEQ 	RLOOP 		332FFA 	 
145 	0037 	0 		RD 	INPUT 		DB2032 	 
150 	003A 	0 		COMPR 	A,S 		A004 	 
155 	003C 	0 		JEQ 	EXIT 		332008 	 
160 	003F 	0 		STCH 	BUFFER,X 	57A02F 	 
165 	0042 	0 		TIXR 	T 		B850 	 
170 	0044 	0 		JLT 	RLOOP 		3B2FEA 	 
175 	0047 	0 	EXIT 	STX 	LENGTH 		13201F 	 
180 	004A 	0 		RSUB 			4F0000 	 
183 	0006 	1 		USE 	CDATA 	 
185 	0006 	1 	INPUT 	BYTE 	X'F1' 		F1 	 
195 			.		 
200 			.	SUBROUTINE TO WRITE RECORD FROM BUFFER 	 
205 			.		 
208 	004D 	0 		USE 	 
210 	004D 	0 	WRREC 	CLEAR 	X 		B410 	 
212 	004F 	0 		LDT 	LENGTH 		772017 	 
215 	0052 	0 	WLOOP 	TD     =X'05'	 	E3201B 	 
220 	0055 	0 		JEQ 	WLOOP 		332FFA 	 
225 	0058 	0 		LDCH 	BUFFER, X 	53A016 	 
230	005B 	0 		WD     =X'05' 		DF2012 	 
235 	005E 	0 		TIXR 	T 		B850 	 
240 	0060 	0 		JLT 	WLOOP 		3B2FEF 	 
245 	0063 	0 		RSUB 			4F0000 	 
252 	0007 	1 		USE 	CDATA 		 
253 				LTORG 
	0007 	1  	*      =C'EOF			454F46
	000A	1	*      =X'05'			05
255 				END	FIRST 		 

			 
	Figure 2.12 Program from Fig.2.11 with object code. 		 


--------------------------------------------------------------------------------------------------------------------------------------


Line		Loc		Source statement		Object code

5		0000		COPY	START	0
6					EXTDEF	BUFFER,EUFEND,LENGTH
7					EXTREF	RDREC,WRREC
10		0000		FIRST	STL	RETADL		172027
15		0003		CLOOP  +JSUB	RDREC		4B100000
20		0007			LDA	LENGTH		032023
25		000A			COMP   #0		290000
30		000D			JEQ	ENDFIL		332007
35		0010		       +JSUB	WRREC		4B100000
40		0014			J	CLOOP		3F2FEC
45		0017		ENDFIL	LDA    =C'EOF'		032016
50		001A			STA	BUFFER		0F2016
55		001D			LDA    #3		010003
60		0020			STA	LENGTH		0F200A
65		0023		       +JSUB	WRREC		4B100000
70		0027			J      @RETADR		3E2000
95		002A		RETADR	RESW	1
100		002D		LENGTH	RESW	1
103					LTORG
		0030		*      =C'EOF'			454F46
105		0033		BUFFER	RESB	4096
106		1033		BUFEND	EQU	*
107		1000		MAXLEN	EQU	BUFEND-BUFFER

109		0000		RDREC	CSECT
110				.
115				.	SUBROUTTINE TO READ RECORD INTO BUFFER
120				.
122					EXTREF	BUFFER,LENGTH,BUFEND
125		0000			CLEAR	X		B410
130		0002			CLEAR	A		B400
132		0004			CLEAR	S		B440
133		0006			LDT	MAXLEN		77201F
135		0009		RLOOP	TD	INPUT		E3201B
140		000C			JEQ	RLOOP		332FFA
145		000F			RD	INPUT		DB2015
150		0012			COMPR	A,S		A004
155		0014			JEQ	EXIT		332009
160		0017		       +STCH	BUFFER,X	57900000
165		001B			TIXR	T		B850
170		001D			JLT	RLOOP		3B2FE9
175		0020		EXIT   +STX	LENGTH		13100000
180		0024			RSUB			4F0000
185		0027		INPUT	BYTE	X'F1'		F1
190		0028		MAXLEN	WORD	BUFEND-BUFFER	000000

193		0000		WRREC	CSECT
195				.
200				.	SUBROUTINE TO WRITE RECORD FROM BUFFER
205				.
207					EXTREF	LENGTH,BUFFER
210		0000			CLEAR	X		B410
212		0002		       +LDT	LENGTH		77100000
215 		0006		WLOOP	TD     =X'05'		E32012
220		0009			JEQ	WLOOP		332FFA
225		000C		       +LDCH	BUFFER,X	53900000
230		0010			WD     =X'05'		DF2008
235		0013			TIXR	T		B850
240		0015			JLT	WLOOP		3B2FEE
245		0018			RSUB			4F0000
255					END	FIRST
		001B		*      =X'05'

			Figure 2.16 Program from Fig. 2.15 with object code	


------------------------------------------------------------------------------------------------------------------------------------


Line		Loc		Source statement		Object code

0		1000		COPY	START	1000
1		1000		EOF	BYTE	C'EOF'		454F46
2		1003		THREE	WORD	3		000003
3		1006		ZERO	WORD	0		000000
4		1009		RETADR	RESW	1
5		100C		LENGTH	RESW	1
6		100F		BUFFER	RESB	4096
9				.
10		200F		FIRST	STL	RETADR		141009
15		2012		CLOOP	JSUB	RDREC		48203D
20		2015			LDA	LENGTH		00100C
25		2018			COMP	ZERO		281006
30		201B			JEQ	ENDFIL		302024
35		201E			JSUB	WRREC		482062
40		2021			J	CLOOP		302012
45		2024		ENDFIL	LDA	EOF		001000
50		2027			STA	BUFFER		0C100F
55		202A			LDA	THREE		001003
60		202D			STA	LENGTH		0C100C
65		2030			JSUB	WRREC		482062
70		2033			LDL	RETADR		081009
75		2036			RSUB			4C0000
110				.
115				.	SUBROUTINE TO READ RECORD INTO BUFFER
120				.
121		2039		INPUT	BYTE	X'F1'		F1
122		203A		MAXLEN	WORD	4096		001000
124				.
125		203D		RDREC	LDX	ZERO		041006
130		2040			LDA	ZERO		001006
135		2043		RLOOP	TD	INPUT		E02039
140		2046			JEQ	RLOOP		302043
145		2049			RD	INPUT		D82039
150		204C			COMP	ZERO		281006
155		204F			JEQ	EXIT		30205B
160		2052			STCH	BUFFER,X	54900F
165		2055			TIX	MAXLEN		2C203A
170		2058			JLT	RLOOP		382043
175		205B		EXIT	STX	LENGTH		10100C
180 		205E			RSUB			4C0000
195				.
200				.	SUBROUTINE TO WRITE RECORD FROM BUFFER
205				.
206		2061		OUTPUT	BYTE	X'05'		05
207				.
210		2062		WRREC	LDX	ZERO		041006	
215		2065		WLOOP	TD	OUTPUT		E02061
220		2068			JEQ	WLOOP		302065
225		206B			LDCH	BUFFER,X	50900F
230		206E			WD	OUTPUT		DC2061
235		2071			TIX	LENGTH		2C100C
240		2074			JLT	WLOOP		382065
245		2077			RSUB			4C0000
255					END	FIRST

		Figure 2.18	Sample program for a one-pass assembler.



